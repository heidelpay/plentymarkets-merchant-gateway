<button id="checkoutButtonHeidelpay" class="btn btn-success btn-block" onclick="prepareHeidelpayPayment()" :disabled="waiting">
    <i id="checkoutButtonHeidelpayArrow" class="fa fa-arrow-right" aria-hidden="true"></i>
    {{ trans("Ceres::Template.checkoutBuyNow") }}
</button>

<script type="text/javascript">
const mopList = {{mopList | json_encode | raw}};

function getHeidelpayBasketMOP() {
    return vueApp.$root.$options.store.state.checkout.payment.methodOfPaymentId;
}

function getHeidelpayPlaceOrderComponent() {
    for (let i = 0; i < vueApp.$children.length; i++) {
        for (let j = 0; j < vueApp.$children[i].$children.length; j++) {
            if (vueApp.$children[i].$children[j].$vnode.componentOptions.tag === 'place-order'
                && typeof vueApp.$children[i].$children[j].preparePayment === 'function') {

                return vueApp.$children[i].$children[j];
            }
        }
    }
}

function prepareHeidelpayPayment() {
    document.getElementById('checkoutButtonHeidelpayArrow').className = 'fa fa-circle-o-notch fa-spin';
    const placeOrderComponent = getHeidelpayPlaceOrderComponent();
    if (placeOrderComponent.validateCheckout()) {
        var heidelpayInstance = new heidelpay('{{publicKey}}');
        for (mop of mopList) {
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{invoice}}') {
                heidelpayPayment(placeOrderComponent, heidelpayInstance.Invoice());
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{invoiceGuaranteed}}') {
                if (!isBirthDateAvailable() && !heidelpayBirthDate) {
                    var Customer = heidelpayInstance.Customer()
                    // Rendering the customer form
                    Customer.create({
                        containerId: 'customer',
                        fields: ['birthdate'],
                        showHeader: false
                    });
                    showHeidelpayBirthDateModal();
                }
                if (isBirthDateAvailable() || heidelpayBirthDate) {
                    if ({{useInvoiceFactoring}}) {
                        heidelpayPayment(placeOrderComponent, heidelpayInstance.InvoiceFactoring());
                    } else {
                        heidelpayPayment(placeOrderComponent, heidelpayInstance.InvoiceGuaranteed());
                    }
                }
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{invoiceGuaranteedB2B}}') {
                // Creating a customer instance
                var Customer = heidelpayInstance.B2BCustomer()
                // Rendering the customer form
                Customer.create({
                    containerId: 'customerB2B',
                });
                window.b2bCustomer = Customer;
                showHeidelpayB2BCustomerModal();
                
                document.getElementById('heidelpayB2BCustomerSubmit').onclick = function() {
                    if (isB2BCustomerValid()) {
                        document.getElementById('heidelpayB2BCustomerSubmit').disabled = true;
                        document.getElementById('heidelpayB2BCustomerButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                        if ({{useInvoiceB2BFactoring}}) {
                            heidelpayPayment(placeOrderComponent, heidelpayInstance.InvoiceFactoring());
                        } else {
                            heidelpayPayment(placeOrderComponent, heidelpayInstance.InvoiceGuaranteed());
                        }
                    }
                };
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{creditCard}}') {
                showHeidelpayCCModal();

                let card = heidelpayInstance.Card();
                // Rendering input fields
                card.create('number', {
                    containerId: 'card-element-id-number',
                    onlyIframe: false
                });
                card.create('expiry', {
                    containerId: 'card-element-id-expiry',
                    onlyIframe: false
                });
                card.create('cvc', {
                    containerId: 'card-element-id-cvc',
                    onlyIframe: false
                });

                document.getElementById('heidelpayCCSubmit').onclick = function() {
                    document.getElementById('heidelpayCCSubmit').disabled = true;
                    document.getElementById('ccModalPayButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                    heidelpayPayment(placeOrderComponent, card);
                };
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{sepa}}') {
                showHeidelpaySepaModal();

                let sepa = heidelpayInstance.SepaDirectDebit();
                sepa.create('sepa-direct-debit', {
                    containerId: 'sepa-IBAN'
                });

                document.getElementById('heidelpaySepaSubmit').onclick = function() {
                    if (document.getElementById('SepaMandate').checked) {
                        document.getElementById('heidelpaySepaSubmit').disabled = true;
                        document.getElementById('sepaModalPayButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                        heidelpayPayment(placeOrderComponent, sepa);
                    } else {
                        showErrorNotification('{{sepaMandateError}}');
                    }
                };
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{sepaGuaranteed}}') {
                if (!isBirthDateAvailable() && !heidelpayBirthDate) {
                    var Customer = heidelpayInstance.Customer()
                    // Rendering the customer form
                    Customer.create({
                        containerId: 'customer',
                        fields: ['birthdate'],
                        showHeader: false
                    });
                    showHeidelpayBirthDateModal();
                }
                 if (isBirthDateAvailable() || heidelpayBirthDate) {
                    showHeidelpaySepaGuaranteedModal();
                    let sepaGuaranteed = heidelpayInstance.SepaDirectDebitGuaranteed();
                    sepaGuaranteed.create('sepa-direct-debit-guaranteed', {
                        containerId: 'sepa-guaranteed-IBAN'
                    });

                    document.getElementById('heidelpaySepaGuaranteedSubmit').onclick = function() {
                        if (document.getElementById('SepaGuaranteedMandate').checked) {
                            document.getElementById('heidelpaySepaGuaranteedSubmit').disabled = true;
                            document.getElementById('sepaGuaranteedModalPayButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                            heidelpayPayment(placeOrderComponent, sepaGuaranteed);
                        } else {
                            showErrorNotification('{{sepaMandateError}}');
                        }
                    };
                 }
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{paypal}}') {
                showHeidelpayPaypalModal();

                let paypal = heidelpayInstance.Paypal();
                // Rendering input fields
                paypal.create('email', {
                    containerId: 'container-heidelpay-paypal',
                    onlyIframe: false
                });

                document.getElementById('heidelpayPaypalSubmit').onclick = function() {
                    document.getElementById('heidelpayPaypalSubmit').disabled = true;
                    document.getElementById('paypalModalPayButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                    heidelpayPayment(placeOrderComponent, paypal);
                };
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{ideal}}') {
                showHeidelpayIdealModal();

                let ideal = heidelpayInstance.Ideal();
                // Rendering input fields
                ideal.create('ideal', {
                    containerId: 'ideal-element'
                });

                document.getElementById('heidelpayIdealSubmit').onclick = function() {
                    document.getElementById('heidelpayIdealSubmit').disabled = true;
                    document.getElementById('idealModalPayButtonArrow').className = 'fa fa-circle-o-notch fa-spin';
                    heidelpayPayment(placeOrderComponent, ideal);
                };
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{sofort}}') {
                document.getElementById('checkoutButtonHeidelpay').disabled = true;
                heidelpayPayment(placeOrderComponent, heidelpayInstance.Sofort());
            }
            if (mop.id === getHeidelpayBasketMOP() && mop.paymentKey === '{{flexipay}}') {
                document.getElementById('checkoutButtonHeidelpay').disabled = true;
                heidelpayPayment(placeOrderComponent, heidelpayInstance.FlexiPayDirect());
            }
        }
    }
}

function isBirthDateAvailable() {
    let address = vueApp.$store.state.address.billingAddress;

    for (let option of address.options) {
        // date of birth
        if (option.typeId === 9 && option.value !== '') {
            return true;
        }
    }

    return false;
}

var heidelpayBirthDate = '';
function validateBirthDate() {
    const errors = document.getElementsByClassName('h-iconimg-error');
    heidelpayBirthDate = document.getElementById('customer').getElementsByTagName('input')[0].value;

    if (errors.length < 1) {
        closeHeidelpayBirthDateModal();
        prepareHeidelpayPayment();
    }
}

function isB2BCustomerValid() {
    let b2bCustomorData = gatherHeidelpayB2BData(window.b2bCustomer);
    let errors = [];
    for (let index in b2bCustomorData) {
        if (!b2bCustomorData[index]) {
            errors.push(index);
        }
    }
    if (errors.length > 0) {
        showErrorNotification('{{ trans("HeidelpayMGW::Frontend.b2bCustomerFieldsError") }}' + errors.join(','));
        return false;
    }
    if (jQuery(".h-iconimg-error").length > 0) {
        showErrorNotification('{{ trans("HeidelpayMGW::Frontend.b2bCustomerDataError") }}');
        return false;
    }

    return true;
}

function heidelpayPayment(placeOrderComponent, paymentInstance) {
    if (paymentInstance) {
        paymentInstance.createResource()
            .then(data => {
                let post;
                if (window.b2bCustomer) {
                    let heidelpayB2BCustomer = gatherHeidelpayB2BData(window.b2bCustomer);
                    post = {data, heidelpayBirthDate, heidelpayB2BCustomer};
                } else {
                    post = {data, heidelpayBirthDate};
                }
                fetch('/{{routeName}}/payment-type/', {
                    method: 'POST', 
                    body: JSON.stringify(post),
                    headers:{
                        'Content-Type': 'application/json'
                    }
                })
                .then(res => res.json())
                .then(response => {
                    if (response.success === true) {
                        placeOrderComponent.preparePayment();
                        closeHeidelpayCCModal();
                        closeHeidelpaySepaModal();
                        closeHeidelpaySepaGuaranteedModal();
                        closeHeidelpayPaypalModal();
                        closeHeidelpayIdealModal();
                        closeHeidelpayB2BCustomerModal();
                        enableButtons();
                        return;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    enableButtons();
                    showErrorNotification(error);
                });
            })
            .catch(error => {
                console.log('Error: ', error);
                enableButtons();
                showErrorNotification(error);
            })
    }
}

function showErrorNotification(errorText) {
    let allNotifications = window.CeresNotification.getNotifications().all();
    for(let notification of allNotifications) {
        if (notification.message === errorText) {
            return;
        }
    }
    window.CeresNotification.error(errorText);
}

function enableButtons() {
    document.getElementById('heidelpayCCSubmit').disabled = false;
    document.getElementById('ccModalPayButtonArrow').className = '';
    document.getElementById('heidelpaySepaSubmit').disabled = false;
    document.getElementById('sepaModalPayButtonArrow').className = '';
    document.getElementById('heidelpaySepaGuaranteedSubmit').disabled = false;
    document.getElementById('sepaGuaranteedModalPayButtonArrow').className = '';
    document.getElementById('heidelpayPaypalSubmit').disabled = false;
    document.getElementById('paypalModalPayButtonArrow').className = '';
    document.getElementById('heidelpayIdealSubmit').disabled = false;
    document.getElementById('idealModalPayButtonArrow').className = '';
    document.getElementById('heidelpayB2BCustomerSubmit').disabled = false;
    document.getElementById('heidelpayB2BCustomerButtonArrow').className = '';
    document.getElementById('checkoutButtonHeidelpay').disabled = false;
    document.getElementById('checkoutButtonHeidelpayArrow').className = 'fa fa-arrow-right';
}

function checkHeidelpayActive(e) {
    let pluginIds = [];
    for (mop of mopList) {
        pluginIds.push(mop.id);
    }
    if (document.getElementById('checkoutButtonHeidelpay').parentNode.childNodes.length > 1) {
        //we have more than one button, need to act
        if (e === false || e.detail === undefined) {
            if (isHeidelpaySelected()) {
                hideAllButHeidelpay(true);
            } else {
                hideHeidelpay();
            }
        } else { 
            //paymentchange
            if (pluginIds.includes(e.detail)) {
                hideAllButHeidelpay(true);
            } else {
                hideHeidelpay();
            }
        }
    } else {
        if (pluginIds.includes(e.detail)) {
            hideAllButHeidelpay(true);
        } else {
            hideAllButHeidelpay(false);
        }
    }
}

function hideHeidelpay() {
    //show all buttons
    for(element of document.getElementById('checkoutButtonHeidelpay').parentNode.childNodes) {
        if (element.tagName == 'BUTTON') {
            element.style.display = 'block';
        }
    }
    
    //hide own button
    document.getElementById('checkoutButtonHeidelpay').style.display = 'none';
}

function isHeidelpaySelected() {
    for(input of document.getElementsByTagName('input')) {
        for (mop of mopList) {
            if (input.value == mop.id && input.checked === true) {
                return true;
            }        
        }
    }

    return false;
}

function hideAllButHeidelpay(isSelected) {
    if (isSelected === true) {
        document.getElementById('checkoutButtonHeidelpay').innerHTML = `<i id="checkoutButtonHeidelpayArrow" class="fa fa-arrow-right" aria-hidden="true"><\/i> {{ trans("HeidelpayMGW::Frontend.checkoutBuyNow") }}`;
    } else {
        document.getElementById('checkoutButtonHeidelpay').innerHTML = `<i id="checkoutButtonHeidelpayArrow" class="fa fa-arrow-right" aria-hidden="true"><\/i> {{ trans("Ceres::Template.checkoutBuyNow") }}`;
    }

    //hide all buttons
    for(element of document.getElementById('checkoutButtonHeidelpay').parentNode.childNodes) {
        if (element.tagName == 'BUTTON') {
            element.style.display = 'none';
        }
    }
    
    //show own button as plugin is selected
    document.getElementById('checkoutButtonHeidelpay').style.display = 'block';
}

document.addEventListener('afterPaymentMethodChanged', (e) => {
    checkHeidelpayActive(e);
});
window.addEventListener('load', (e) => {
    checkHeidelpayActive(e);
});
</script>
